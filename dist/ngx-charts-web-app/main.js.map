{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/documentation/donut-gauge-doc/donut-gauge-doc.component.ts","./src/app/documentation/donut-gauge-doc/donut-gauge-doc.component.html","./src/environments/environment.ts","./src/main.ts","./projects/ngx-charts-web/src/lib/components/donut-gauge/donut-gauge.component.html","./projects/ngx-charts-web/src/lib/components/donut-gauge/donut-gauge.constants.ts","./projects/ngx-charts-web/src/lib/components/donut-gauge/donut-gauge.component.ts","./projects/ngx-charts-web/src/lib/ngx-charts-web.module.ts","./projects/ngx-charts-web/src/public_api.ts","./projects/ngx-charts-web/src/atom-platform-ngx-charts-web.ts"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","<app-donut-gauge-doc></app-donut-gauge-doc>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { NgxChartsWebModule } from 'ngx-charts-web';\nimport { DonutGaugeDocComponent } from './documentation/donut-gauge-doc/donut-gauge-doc.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DonutGaugeDocComponent\n  ],\n  imports: [\n    BrowserModule,\n    NgxChartsWebModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { IDonutGaugeConfig, DonutWidth, DonutGradientOrigin } from 'ngx-charts-web';\n\n@Component({\n  selector: 'app-donut-gauge-doc',\n  templateUrl: './donut-gauge-doc.component.html',\n  styleUrls: ['./donut-gauge-doc.component.scss']\n})\nexport class DonutGaugeDocComponent implements OnInit {\n\n  chartValue = 0;\n\n  chartOverride1: IDonutGaugeConfig = {\n    strokeWidth: DonutWidth.Medium,\n    gradientColors: ['#c93cc2']\n  };\n\n  chartOverride2: IDonutGaugeConfig = {\n    strokeWidth: DonutWidth.Thick,\n    gradientColors: ['#9d11af', '#309aad', '#cef995'],\n    baseColor: '#dae5c9',\n    textColor: '#309aad',\n    gradientDirection: DonutGradientOrigin.BottomLeft,\n    label: 'testLabel',\n    title: 'title'\n  };\n\n  chartOverride3: IDonutGaugeConfig = {\n    strokeWidth: DonutWidth.Medium,\n    gradientColors: ['#309aad', '#cef995', '#9d11af'],\n    baseColor: '#dae5c9',\n    textColor: '#309aad',\n    gradientDirection: DonutGradientOrigin.TopRight,\n    label: 'otherLabel'\n  };\n\n  chartOverride4: IDonutGaugeConfig = this.chartOverride2;\n\n  constructor() { }\n\n  ngOnInit() {\n    setTimeout(() => {\n      this.chartValue = 0.75;\n    }, 200);\n  }\n\n  changeValue() {\n    this.chartValue = Math.random();\n  }\n\n  changeConfig() {\n    this.chartOverride4 = (this.chartOverride4 === this.chartOverride2)\n      ? this.chartOverride3\n      : this.chartOverride2;\n  }\n}\n\n","<h1>Donut Gauge Configuration</h1>\n<section>\n  <pre><code class=\"language-markup\">\n    &lt;ngx-donut-gauge [value]=\"value\" [config]=\"config\"&gt;&lt;/ngx-donut-gauge&gt;\n  </code></pre>\n  <table>\n    <tr>\n      <td>\n        <code>value</code>\n      </td>\n      <td>A number between 0 and 1 inclusive that will be displayed as a percentage in the chart.</td>\n    </tr>\n    <tr>\n      <td>\n        <code>config</code>\n      </td>\n      <td>Customization configuration for the chart. See example further down.</td>\n    </tr>\n  </table>\n</section>\n\n<button class=\"button-primary--large\" (click)=\"changeValue()\">change value</button>\n<section>\n  <h4>Default Styles</h4>\n  <div class=\"donut-gauge-demo\">\n    <div class='donut-gauge-demo__small'>\n      <ngx-donut-gauge [value]=chartValue></ngx-donut-gauge>\n    </div>\n    <div class='donut-gauge-demo__med'>\n      <ngx-donut-gauge [value]=chartValue></ngx-donut-gauge>\n    </div>\n    <div class='donut-gauge-demo__large'>\n      <ngx-donut-gauge [value]=chartValue></ngx-donut-gauge>\n    </div>\n  </div>\n</section>\n<section>\n  <h4>Overriding configuration</h4>\n  <div class=\"donut-gauge-demo\">\n    <div class='donut-gauge-demo__small'>\n      <ngx-donut-gauge [value]=chartValue [config]=chartOverride1></ngx-donut-gauge>\n    </div>\n    <div class='donut-gauge-demo__small'>\n      <ngx-donut-gauge [value]=chartValue [config]=chartOverride2></ngx-donut-gauge>\n    </div>\n  </div>\n</section>\n<section>\n  <h4>Dynamically Swapping Configuration</h4>\n  <button class=\"button-secondary--small\" (click)='changeConfig()'>Swap</button>\n  <div class=\"donut-gauge-demo\">\n    <div class='donut-gauge-demo__small'>\n      <ngx-donut-gauge [value]=chartValue [config]=chartOverride4></ngx-donut-gauge>\n    </div>\n  </div>\n</section>\n<section>\n  <h4>Sample Custom Configuration</h4>\n  <pre><code class=\"language-javascript\">\n    // all fields are optional to override\n    // the gauge uses defaults if the config field is not overridden\n    config = &#123;\n      strokeWidth: DonutWidth.Thick,\n      gradientDirection: DonutGradientOrigin.BottomLeft,\n      gradientColors: ['#9d11af', '#309aad', '#cef995'],\n      baseColor: '#dae5c9',\n      textColor: '#309aad',\n      label: 'testLabel',\n      title: 'title'\n    &#125;;\n  </code></pre>\n  <p>\n    To get constants that\n    <code>strokeWidth</code> and\n    <code>gradientDirection</code> use, please import them from\n    <code>donut-gauge.constants.ts</code>.\n  </p>\n\n  <h5>Custom Parameters:</h5>\n  <table>\n    <tr>\n      <td>\n        <code>strokeWidth</code>\n      </td>\n      <td>Width of the stroke. See\n        <code>donut-gauge.constants.ts</code> for possible values. </td>\n    </tr>\n    <tr>\n      <td>\n        <code>gradientDirection</code>\n      </td>\n      <td>The starting direction of the linear gradient for the colors used in the gauge. See\n        <code>donut-gauge.constants.ts</code> for possible values.</td>\n    </tr>\n    <tr>\n      <td>\n        <code>gradientColors</code>\n      </td>\n      <td>Takes array of colors in hexadecimal strings prefixed by with\n        <code>#</code>. The first color in the array is the color at the source of the gradient and the rest goes in order. For\n        a solid color, supply only 1 color in the array.</td>\n    </tr>\n    <tr>\n      <td>\n        <code>baseColor</code>\n      </td>\n      <td>The color of the gauge base. Is grey by default. Takes a hexadecimal string prefixed with\n        <code>#</code>.</td>\n    </tr>\n    <tr>\n      <td>\n        <code>textColor</code>\n      </td>\n      <td>The color of the percentage value and label in the middle. Is black by default. Takes a hexadecimal string prefixed\n        with\n        <code>#</code>.</td>\n    </tr>\n    <tr>\n      <td>\n        <code>label</code>\n      </td>\n      <td>Optional text label under the percentage.</td>\n    </tr>\n    <tr>\n      <td>\n        <code>title</code>\n      </td>\n      <td>SVG Chart Title for accessibility purposes.</td>\n    </tr>\n  </table>\n</section>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n","<div class='donut-gauge'>\n  <svg class='donut-gauge__graphic' width='100px' height='100px' viewBox='0 0 100 100'>\n    <title>{{title}}</title>\n    <defs>\n      <linearGradient [attr.id]=\"gradientId\" \n        [attr.x1]=\"gradientSource.x1\" [attr.y1]=\"gradientSource.y1\"\n        [attr.x2]=\"gradientSource.x2\" [attr.y2]=\"gradientSource.y2\">\n        <stop *ngFor=\"let item of gradient\" [attr.offset]=\"item.percent\" [attr.stop-color]=\"item.color\" />\n      </linearGradient>\n    </defs>\n\n    <circle class='donut-gauge__background' \n      [attr.r]=\"circleRadius\" \n      cx=\"50%\" \n      cy=\"50%\" \n      [ngStyle]=\"baseCircleStyles\" />\n    <circle class='donut-gauge__gauge' \n      transform=\"rotate(-90,50,50)\" \n      [attr.r]=\"circleRadius\" \n      cx=\"50%\" \n      cy=\"50%\" \n      [ngStyle]=\"gaugeStyles\" />\n    \n      <text \n      class='donut-gauge__value' \n      text-anchor=\"middle\" \n      x=\"50\" \n      attr.y=\"{{label? 54 : 59 }}\" \n      font-size=\"23px\"\n      [ngStyle]=\"fontStyles\">\n      {{value |percent: '.0-0'}}\n    </text>\n    <text *ngIf='label'\n      class='donut-gauge__label' \n      text-anchor=\"middle\" \n      x=\"50\" \n      y=\"68\" \n      font-size=\"12px\"\n      [ngStyle]=\"fontStyles\">\n      {{label}}\n    </text>\n  </svg>\n</div>\n","export const DonutWidth = {\n    Thin: 0,\n    Medium: 1,\n    Thick: 2\n};\n\nexport const DonutGradientOrigin = {\n    Top: 0,\n    Left: 1,\n    Bottom: 2,\n    Right: 3,\n    TopLeft: 4,\n    TopRight: 5,\n    BottomLeft: 6,\n    BottomRight: 7\n};\n","import { Component, OnChanges, Input, ChangeDetectionStrategy } from '@angular/core';\nimport { IDonutGaugeConfig } from './donut-gauge.interface';\nimport { DonutWidth, DonutGradientOrigin } from './donut-gauge.constants';\n\n@Component({\n  selector: 'ngx-donut-gauge',\n  templateUrl: './donut-gauge.component.html',\n  styleUrls: ['./donut-gauge.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DonutGaugeComponent implements OnChanges {\n  chartWidths = [0.03, 0.06, 0.09];\n  gradientDirections = [\n    { x1: '100%', x2: '0%', y1: '50%', y2: '50%' }, // Top\n    { x1: '50%', x2: '50%', y1: '0%', y2: '100%' }, // Left\n    { x1: '0%', x2: '100%', y1: '50%', y2: '50%' }, // Bottom\n    { x1: '50%', x2: '50%', y1: '100%', y2: '0%' }, // Right\n    { x1: '100%', x2: '0%', y1: '0%', y2: '100%' }, // TopLeft\n    { x1: '100%', x2: '0%', y1: '100%', y2: '0%' }, // TopRight\n    { x1: '0%', x2: '100%', y1: '0%', y2: '100%' }, // BottomLeft\n    { x1: '0%', x2: '100%', y1: '100%', y2: '0%' }  // BottomRight\n  ];\n\n  defaultConfig: IDonutGaugeConfig = {\n    strokeWidth: DonutWidth.Thin,\n    gradientColors: ['#1951c1', '#c90cb3'],\n    baseColor: '#B4B4B4',\n    textColor: '#000000',\n    gradientDirection: DonutGradientOrigin.TopLeft,\n    title: 'Add your accessible title here for your Donut Chart'\n  };\n\n  @Input() config: IDonutGaugeConfig = {};\n  @Input() value = 0;\n\n  chartConfig = this.defaultConfig;\n  calculatedValues: any;\n\n  circleRadius: string;\n  baseCircleStyles: any;\n  gaugeStyles: any;\n  fontStyles: any;\n  gradient: Array<any>;\n  gradientId: string;\n  gradientSource: any;\n  label: string;\n  title: string;\n\n  private baseGaugeStyle: any;\n\n  constructor() {\n    this.gradientId = 'gradient-' + this.create_UUID();\n    this.baseGaugeStyle = { stroke: `url(${location.href}#${this.gradientId})` };\n    this.onConfigUpdate();\n  }\n\n  create_UUID() {\n    let dt = new Date().getTime();\n    const uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n      const r = (dt + Math.random() * 16) % 16 | 0;\n      dt = Math.floor(dt / 16);\n      return (c === 'x' ? r : (r & 0x3 | 0x8)).toString(16);\n    });\n    return uuid;\n  }\n\n  ngOnChanges(changes) {\n    if (changes.config) {\n      this.onConfigUpdate();\n    }\n    if (changes.value) {\n      this.onValueUpdate();\n    }\n  }\n\n  calculateValues(config) {\n    const strokeWidth = this.chartWidths[config.strokeWidth];\n    const circleRadius = .5 - strokeWidth / 2;\n    const dashArrayMax = 2 * Math.PI * circleRadius;\n    return {\n      strokeWidth,\n      circleRadius,\n      dashArrayMax\n    };\n  }\n\n  onConfigUpdate() {\n    this.chartConfig = {\n      ...this.defaultConfig,\n      ...this.config\n    };\n\n    this.calculatedValues = this.calculateValues(this.chartConfig);\n\n    this.gradient = this.getGradientPercentages(this.chartConfig.gradientColors);\n\n    this.baseCircleStyles = this.getBaseCircleStyles(this.chartConfig.baseColor, this.calculatedValues.strokeWidth);\n\n    this.circleRadius = this.toPercent(this.calculatedValues.circleRadius);\n\n    this.fontStyles = this.getFontStyles(this.chartConfig.textColor);\n\n    this.gaugeStyles = this.updateGaugeStyles(this.gaugeStyles, this.calculatedValues);\n\n    this.gradientSource = this.gradientDirections[this.chartConfig.gradientDirection];\n    this.label = this.chartConfig.label;\n    this.title = this.chartConfig.title;\n  }\n\n  onValueUpdate() {\n    this.gaugeStyles = this.updateGaugeStyles(this.gaugeStyles, this.calculatedValues);\n  }\n\n  getGradientPercentages(colors) {\n    return colors.map((color, index, arr) => (\n      {\n        percent: this.toPercent((index) ? index / (arr.length - 1) : 0),\n        color: color\n      }\n    ));\n  }\n\n  getBaseCircleStyles(color, widthProportion) {\n    return {\n      'stroke': color,\n      'stroke-width': this.toPercent(widthProportion),\n    };\n  }\n\n  getFontStyles(color) {\n    return {\n      'fill': color\n    };\n  }\n\n  updateGaugeStyles(oldStyle = this.baseGaugeStyle, calculatedValues) {\n    const gaugeStyle = { ...oldStyle };\n\n    const dashArrayMax = calculatedValues.dashArrayMax;\n    const dashArrayMaxPercent = this.toPercent(dashArrayMax);\n    const gaugeLength = this.toPercent(this.value * dashArrayMax);\n\n    gaugeStyle['stroke-width'] = this.toPercent(calculatedValues.strokeWidth);\n    gaugeStyle['stroke-dasharray'] = `${gaugeLength} ${dashArrayMaxPercent}`;\n\n    return gaugeStyle;\n  }\n\n  toPercent(num) {\n    return `${num * 100}%`;\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DonutGaugeComponent } from './components/donut-gauge/donut-gauge.component';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [DonutGaugeComponent],\n  exports: [DonutGaugeComponent]\n})\nexport class NgxChartsWebModule { }\n","/*\n * Public API Surface of ngx-charts-web\n */\n\nexport * from './lib/ngx-charts-web.module';\nexport * from './lib/components/donut-gauge/index';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["AppComponent","constructor","selectors","decls","vars","template","i0","BrowserModule","NgxChartsWebModule","DonutGaugeDocComponent","AppModule","bootstrap","declarations","imports","DonutWidth","DonutGradientOrigin","strokeWidth","Medium","gradientColors","Thick","baseColor","textColor","gradientDirection","BottomLeft","label","title","TopRight","chartOverride2","ngOnInit","setTimeout","chartValue","changeValue","Math","random","changeConfig","chartOverride4","chartOverride3","consts","ctx","environment","production","enableProdMode","__NgCli_bootstrap_1","bootstrapModule","catch","err","console","log","Thin","Top","Left","Bottom","Right","TopLeft","BottomRight","DonutGaugeComponent","x1","x2","y1","y2","defaultConfig","gradientId","create_UUID","baseGaugeStyle","stroke","href","onConfigUpdate","dt","Date","getTime","uuid","replace","c","r","floor","toString","ngOnChanges","changes","config","value","onValueUpdate","calculateValues","chartWidths","circleRadius","dashArrayMax","PI","chartConfig","calculatedValues","gradient","getGradientPercentages","baseCircleStyles","getBaseCircleStyles","toPercent","fontStyles","getFontStyles","gaugeStyles","updateGaugeStyles","gradientSource","gradientDirections","colors","map","color","index","arr","percent","length","widthProportion","oldStyle","gaugeStyle","dashArrayMaxPercent","gaugeLength","num","i1","Component","changeDetection","ChangeDetectionStrategy","OnPush","styles","Input","CommonModule","NgModule","args","exports"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}