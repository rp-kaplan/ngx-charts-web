{"version":3,"file":"atom-platform-ngx-charts-web.mjs","sources":["../../../projects/ngx-charts-web/src/lib/components/donut-gauge/donut-gauge.constants.ts","../../../projects/ngx-charts-web/src/lib/components/donut-gauge/donut-gauge.component.ts","../../../projects/ngx-charts-web/src/lib/components/donut-gauge/donut-gauge.component.html","../../../projects/ngx-charts-web/src/lib/ngx-charts-web.module.ts","../../../projects/ngx-charts-web/src/public_api.ts","../../../projects/ngx-charts-web/src/atom-platform-ngx-charts-web.ts"],"sourcesContent":["export const DonutWidth = {\n    Thin: 0,\n    Medium: 1,\n    Thick: 2\n};\n\nexport const DonutGradientOrigin = {\n    Top: 0,\n    Left: 1,\n    Bottom: 2,\n    Right: 3,\n    TopLeft: 4,\n    TopRight: 5,\n    BottomLeft: 6,\n    BottomRight: 7\n};\n","import { Component, OnChanges, Input, ChangeDetectionStrategy } from '@angular/core';\nimport { IDonutGaugeConfig } from './donut-gauge.interface';\nimport { DonutWidth, DonutGradientOrigin } from './donut-gauge.constants';\n\n@Component({\n  selector: 'ngx-donut-gauge',\n  templateUrl: './donut-gauge.component.html',\n  styleUrls: ['./donut-gauge.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DonutGaugeComponent implements OnChanges {\n  chartWidths = [0.03, 0.06, 0.09];\n  gradientDirections = [\n    { x1: '100%', x2: '0%', y1: '50%', y2: '50%' }, // Top\n    { x1: '50%', x2: '50%', y1: '0%', y2: '100%' }, // Left\n    { x1: '0%', x2: '100%', y1: '50%', y2: '50%' }, // Bottom\n    { x1: '50%', x2: '50%', y1: '100%', y2: '0%' }, // Right\n    { x1: '100%', x2: '0%', y1: '0%', y2: '100%' }, // TopLeft\n    { x1: '100%', x2: '0%', y1: '100%', y2: '0%' }, // TopRight\n    { x1: '0%', x2: '100%', y1: '0%', y2: '100%' }, // BottomLeft\n    { x1: '0%', x2: '100%', y1: '100%', y2: '0%' }  // BottomRight\n  ];\n\n  defaultConfig: IDonutGaugeConfig = {\n    strokeWidth: DonutWidth.Thin,\n    gradientColors: ['#1951c1', '#c90cb3'],\n    baseColor: '#B4B4B4',\n    textColor: '#000000',\n    gradientDirection: DonutGradientOrigin.TopLeft,\n    title: 'Add your accessible title here for your Donut Chart'\n  };\n\n  @Input() config: IDonutGaugeConfig = {};\n  @Input() value = 0;\n\n  chartConfig = this.defaultConfig;\n  calculatedValues: any;\n\n  circleRadius: string;\n  baseCircleStyles: any;\n  gaugeStyles: any;\n  fontStyles: any;\n  gradient: Array<any>;\n  gradientId: string;\n  gradientSource: any;\n  label: string;\n  title: string;\n\n  private baseGaugeStyle: any;\n\n  constructor() {\n    this.gradientId = 'gradient-' + this.create_UUID();\n    this.baseGaugeStyle = { stroke: `url(${location.href}#${this.gradientId})` };\n    this.onConfigUpdate();\n  }\n\n  create_UUID() {\n    let dt = new Date().getTime();\n    const uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n      const r = (dt + Math.random() * 16) % 16 | 0;\n      dt = Math.floor(dt / 16);\n      return (c === 'x' ? r : (r & 0x3 | 0x8)).toString(16);\n    });\n    return uuid;\n  }\n\n  ngOnChanges(changes) {\n    if (changes.config) {\n      this.onConfigUpdate();\n    }\n    if (changes.value) {\n      this.onValueUpdate();\n    }\n  }\n\n  calculateValues(config) {\n    const strokeWidth = this.chartWidths[config.strokeWidth];\n    const circleRadius = .5 - strokeWidth / 2;\n    const dashArrayMax = 2 * Math.PI * circleRadius;\n    return {\n      strokeWidth,\n      circleRadius,\n      dashArrayMax\n    };\n  }\n\n  onConfigUpdate() {\n    this.chartConfig = {\n      ...this.defaultConfig,\n      ...this.config\n    };\n\n    this.calculatedValues = this.calculateValues(this.chartConfig);\n\n    this.gradient = this.getGradientPercentages(this.chartConfig.gradientColors);\n\n    this.baseCircleStyles = this.getBaseCircleStyles(this.chartConfig.baseColor, this.calculatedValues.strokeWidth);\n\n    this.circleRadius = this.toPercent(this.calculatedValues.circleRadius);\n\n    this.fontStyles = this.getFontStyles(this.chartConfig.textColor);\n\n    this.gaugeStyles = this.updateGaugeStyles(this.gaugeStyles, this.calculatedValues);\n\n    this.gradientSource = this.gradientDirections[this.chartConfig.gradientDirection];\n    this.label = this.chartConfig.label;\n    this.title = this.chartConfig.title;\n  }\n\n  onValueUpdate() {\n    this.gaugeStyles = this.updateGaugeStyles(this.gaugeStyles, this.calculatedValues);\n  }\n\n  getGradientPercentages(colors) {\n    return colors.map((color, index, arr) => (\n      {\n        percent: this.toPercent((index) ? index / (arr.length - 1) : 0),\n        color: color\n      }\n    ));\n  }\n\n  getBaseCircleStyles(color, widthProportion) {\n    return {\n      'stroke': color,\n      'stroke-width': this.toPercent(widthProportion),\n    };\n  }\n\n  getFontStyles(color) {\n    return {\n      'fill': color\n    };\n  }\n\n  updateGaugeStyles(oldStyle = this.baseGaugeStyle, calculatedValues) {\n    const gaugeStyle = { ...oldStyle };\n\n    const dashArrayMax = calculatedValues.dashArrayMax;\n    const dashArrayMaxPercent = this.toPercent(dashArrayMax);\n    const gaugeLength = this.toPercent(this.value * dashArrayMax);\n\n    gaugeStyle['stroke-width'] = this.toPercent(calculatedValues.strokeWidth);\n    gaugeStyle['stroke-dasharray'] = `${gaugeLength} ${dashArrayMaxPercent}`;\n\n    return gaugeStyle;\n  }\n\n  toPercent(num) {\n    return `${num * 100}%`;\n  }\n\n}\n","<div class='donut-gauge'>\n  <svg class='donut-gauge__graphic' width='100px' height='100px' viewBox='0 0 100 100'>\n    <title>{{title}}</title>\n    <defs>\n      <linearGradient [attr.id]=\"gradientId\" \n        [attr.x1]=\"gradientSource.x1\" [attr.y1]=\"gradientSource.y1\"\n        [attr.x2]=\"gradientSource.x2\" [attr.y2]=\"gradientSource.y2\">\n        <stop *ngFor=\"let item of gradient\" [attr.offset]=\"item.percent\" [attr.stop-color]=\"item.color\" />\n      </linearGradient>\n    </defs>\n\n    <circle class='donut-gauge__background' \n      [attr.r]=\"circleRadius\" \n      cx=\"50%\" \n      cy=\"50%\" \n      [ngStyle]=\"baseCircleStyles\" />\n    <circle class='donut-gauge__gauge' \n      transform=\"rotate(-90,50,50)\" \n      [attr.r]=\"circleRadius\" \n      cx=\"50%\" \n      cy=\"50%\" \n      [ngStyle]=\"gaugeStyles\" />\n    \n      <text \n      class='donut-gauge__value' \n      text-anchor=\"middle\" \n      x=\"50\" \n      attr.y=\"{{label? 54 : 59 }}\" \n      font-size=\"23px\"\n      [ngStyle]=\"fontStyles\">\n      {{value |percent: '.0-0'}}\n    </text>\n    <text *ngIf='label'\n      class='donut-gauge__label' \n      text-anchor=\"middle\" \n      x=\"50\" \n      y=\"68\" \n      font-size=\"12px\"\n      [ngStyle]=\"fontStyles\">\n      {{label}}\n    </text>\n  </svg>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DonutGaugeComponent } from './components/donut-gauge/donut-gauge.component';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [DonutGaugeComponent],\n  exports: [DonutGaugeComponent]\n})\nexport class NgxChartsWebModule { }\n","/*\n * Public API Surface of ngx-charts-web\n */\n\nexport * from './lib/ngx-charts-web.module';\nexport * from './lib/components/donut-gauge/index';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":"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"}